url_1 = "https://graph.facebook.com/v2.12/"
url_2 = "?fields=posts%7Bcomments.limit(20)%7D&access_token="
url = paste0(url_1,FacebookID,url_2,token)
response = GET(url)
posts  = content(response)
View(response)
View(posts)
View(posts)
token = "EAACEdEose0cBAAfsjAkwlCp1gds8Peh5fJJHdsNPjcVPlrfmG65tiADQ3QDZBWUPpdXUFzqczgRzZC8U29tGzcNnye3foNUR94qilgYZBItUYxZCJDiCplqXL9YLEcWbZBEr5qJbErMMd2QxtZB12lgsebOptpoZBxtFMDvEdoahO9dnXwAU9swb8cs3jeysU0ZD"
FacebookID = "enc.teia"
url_1 = "https://graph.facebook.com/v2.12/"
url_2 = "?fields=posts%7Bcomments.limit(20)%7D&access_token="
url = paste0(url_1,FacebookID,url_2,token)
response = GET(url)
posts  = content(response)
library(magrittr)
data <- posts$posts$data
View(data)
data <- posts$posts$data$1
data[[1]]
mode(data)
do.call(rbind,data)
View(data.framde(do.call(rbind,data)))
View(data.frame(do.call(rbind,data)))
View(list(do.call(rbind,data)))
data <- posts$posts$data
View(data)
View(data)
data[[1]]
length(data[[1]])>2
length(data[[1]])==2
data[[length(data[[]])==2]]
data[1:2]
}
for(i in 1:25){
if(length(data[[i]]==2)){
print(i)
}
}
for(i in 1:25){
if(length(data[[i]]==2)){
print(i)
}
}
for(i in 1:25){
print(i)
}
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
}
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i, after=1)
}
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i, after=1)
}
x <- c()
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i, after=1)
}
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i)
}
x <- c(0)
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i)
}
for(i in 1:25){
if(length(data[[i]])==2)
append(x,i)
}
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
append(x,i)
}
x <- c(1,2,3)
append(x,2)
x
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x <- c(0)
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
x <- c()
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
data<- data[x]
data<- data[x]
data <- posts$posts$data
data<- data[[x]]
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
x <- c()
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
data<- data[[x]]
data<- data[[1:2]]
View(posts)
data <- posts$posts$data
data<- data[[1:2]]
View(posts)
data <- posts$posts$data
View(data)
x <- c()
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
data[[1:2]]
x
for(i in 1:25){
if(length(data[[i]])==2)
print(i)
x <- append(x,i)
}
x
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
}
}
x
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
}
}
x
View(data)
data <- posts$posts$data
data[[x]]
new <- list()
data[[1]]
mode(data[[1]])
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]])
}
}
View(new)
new <- list()
data <- posts$posts$data
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]])
}
}
View(new)
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]]$comments)
}
}
View(new)
new <- list()
data <- posts$posts$data
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]]$comments)
}
}
View(new)
new <- list()
data <- posts$posts$data
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
print(i)
x <- append(x,i)
new <- append(new,data[[i]])
}
}
View(new)
data <- posts$posts$data
x <- c()
for(i in 1:25){
if(length(data[[i]])==2){
x <- append(x,i)
new <- append(new,data[[i]])
}
}
View(new)
data <- posts$posts$data
x
for(i in x){
data <- data[[-x]]
}
library(jsonlite)
library(httr)
token = "EAACEdEose0cBAJAFfop9CXDM7djByDqTvPClh9aziKXpqYWegeaYMOocDRzTCfNs14CJDjpNwUR6MtBmn2AXkFk5moZALVnCTeZAk63iRXa74Cyvg7b3wa2QSEN1a0zuhaXBeSCFEocZA8mpMBZCM1YeIydy8GzuVPTZAPW6CB9Qd4h2kXjG2AnLnon6iwogZD"
FacebookID = "enc.teia"
url_1 = "https://graph.facebook.com/v2.12/"
url_2 = "?fields=posts%7Bcomments.limit(20)%7D&access_token="
url = paste0(url_1,FacebookID,url_2,token)
response = GET(url)
posts  = content(response)
library(magrittr)
View(response)
data <- posts$posts$data
View(data)
data2 <- posts$posts$data[[1]]$comments$data %>% do.call(rbind,.) %>% data.frame()
View(data2)
data2 <- posts$posts$data[[2]]$comments$data %>% do.call(rbind,.) %>% data.frame()
posts$posts$data[[2]]$comments
posts$posts$data[[2]]$comments == NULL
posts$posts$data[[2]]
posts$posts$data[[1]]$comments
posts$posts$data[[2]]$comments
posts$posts$data[[2]]$comments == NULL
posts$posts$data[[1]]$comments
comments %in% posts$posts$data[[1]]
??rlist
posts$posts$data[[1]]
posts$posts$data[[5]]
posts$posts$data[[6]]
data2 <- posts$posts$data[[6]]$comments$data %>% do.call(rbind,.) %>% data.frame()
View(data2)
length(posts$posts$data[[6]])
length(posts$posts$data[[1]])
posts$posts$data[[1]]
posts$posts$data[[1]]
posts$posts$data[[2]]
posts$posts$data[[3]]
length(posts$posts$data[[2]])
length(posts$posts$data[[2]]) == 1
posts$posts$data[[5]]
length(posts$posts$data[[5]]) == 2
posts$posts$data[[]]
sapply(posts$posts$data,function(x){
if(length(x)==2) return (1)
else return (0)
})
# 判斷是否有人留言
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (1)
else return (0)
})
ismessage
data[[ismessage]]
data[ismessage]
ismessage
ismessage
data[2]
data[1]
data[3]
# 判斷是否有人留言
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (1)
else return (0)
})
ismessage
# 判斷是否有人留言
ct = 0
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (ct)
ct+=1
})
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (ct)
ct += 1
})
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (ct)
ct = ct + 1
})
ismessage
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (ct)
ct = ct + 1
})
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (1)
else return (0)
})
ismessage
length(ismessage)
ismessage[0]
ismessage[1]
for(i=1;i<=length(ismessage);i++){
print(i)
}
?for
for(i in range(1:25)){
print(i)
}
for(i in range(c(1:25))){
print(i)
}
for(i in c(1:25)){
print(i)
}
for(i in c(1:length(ismessage))){
print(i)
}
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
print(i)
}
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
x <- c(i)
}
x
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
x <- c(x,i)
}
x
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (1)
else return (0)
})
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
x <- c(x,i)
}
x
del x
rm x
?rm
x <- 0
x
x <- NULL
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (1)
else return (0)
})
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
x <- c(x,i)
}
x
data[x]
data <- data[x]
ismessage
x
sapply(data,function(x){
messageIn <- x$comments$data %>% do.call(rbind,.) %>% data.frame()
message <- rbind(message,messageIn)
})
sapply(data,function(x){
messageIn <- x$comments$data %>% do.call(rbind,.) %>% data.frame()
})
sapply(data,function(x){
return(x$comments$data %>% do.call(rbind,.) %>% data.frame())
})
XDD <- sapply(data,function(x){
return(x$comments$data %>% do.call(rbind,.) %>% data.frame())
})
View(XDD)
data <- data[x]$comments$data %>% do.call(rbind,.) %>% data.frame()
data <- data$comments$data %>% do.call(rbind,.) %>% data.frame()
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
ismessageidx <- c(x,i)
}
ismessageidx
data2 <- posts$posts$data[[4]]$comments$data %>% do.call(rbind,.) %>% data.frame()
data2 <- posts$posts$data[[5]]$comments$data %>% do.call(rbind,.) %>% data.frame()
View(rbind(data,data2))
data <- posts$posts$data[[4]]$comments$data %>% do.call(rbind,.) %>% data.frame()
data2 <- posts$posts$data[[5]]$comments$data %>% do.call(rbind,.) %>% data.frame()
View(rbind(data,data2))
token = "EAACEdEose0cBAJAFfop9CXDM7djByDqTvPClh9aziKXpqYWegeaYMOocDRzTCfNs14CJDjpNwUR6MtBmn2AXkFk5moZALVnCTeZAk63iRXa74Cyvg7b3wa2QSEN1a0zuhaXBeSCFEocZA8mpMBZCM1YeIydy8GzuVPTZAPW6CB9Qd4h2kXjG2AnLnon6iwogZD"
FacebookID = "enc.teia"
url_1 = "https://graph.facebook.com/v2.12/"
url_2 = "?fields=posts%7Bcomments.limit(20)%7D&access_token="
url = paste0(url_1,FacebookID,url_2,token)
response = GET(url)
posts  = content(response)
data <- posts$posts$data
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (1)
else return (0)
})
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
ismessageidx <- c(x,i)
}
ismessageidx
ismessage = sapply(posts$posts$data,function(x){
if(length(x)==2) return (1)
else return (0)
})
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
ismessageidx <- c(x,i)
}
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
ismessageidx <- c(ismessageidx,i)
}
ismessageidx = NULL
for(i in c(1:length(ismessage))){
if(ismessage[i]==1)
ismessageidx <- c(ismessageidx,i)
}
ismessageidx
data1 <- posts$posts$data[[4]]$comments$data %>% do.call(rbind,.) %>% data.frame()
data2 <- posts$posts$data[[5]]$comments$data %>% do.call(rbind,.) %>% data.frame()
View(rbind(data1,data2))
data1 <- posts$posts$data[[6]]$comments$data %>% do.call(rbind,.) %>% data.frame()
data2 <- posts$posts$data[[5]]$comments$data %>% do.call(rbind,.) %>% data.frame()
View(rbind(data1,data2))
data1 <- posts$posts$data[[5]]$comments$data %>% do.call(rbind,.) %>% data.frame()
data2 <- posts$posts$data[[6]]$comments$data %>% do.call(rbind,.) %>% data.frame()
View(rbind(data1,data2))
data1 <- posts$posts$data[[5]]$comments$data %>% do.call(rbind,.) %>% data.frame()
data2 <- posts$posts$data[[6]]$comments$data %>% do.call(rbind,.) %>% data.frame()
data3 <- posts$posts$data[[9]]$comments$data %>% do.call(rbind,.) %>% data.frame()
View(rbind(data1,data2,data3))
for(i in ismessageidx){
print(i)
}
Output = data.frame()
for(i in ismessageidx){
dataIn <- posts$posts$data[[i]]$comments$data %>% do.call(rbind,.) %>% data.frame()
Output = rbind(Output,dataIn)
}
View(Output)
setwd("E:/GitHub/NTU_code/week_10")
library(magrittr)
library(magrittr)
data <- iris
data$Species <- data$Species %>% as.factor()
summary(data)
Class<- function(Ary){
DATA = c()
Min = min(Ary)
Max = max(Ary)
Inter = (Max - Min)/3
Output <- sapply(Ary,function(x){
if(Min<= x && x < Min+Inter){
DATA=c(DATA,"small")
}else if(Min+Inter<= x && x < Min+Inter*2){
DATA=c(DATA,"median")
}else if(Min+Inter*2<= x && x <= Min+Inter*3){
DATA=c(DATA,"large")
}
})
return(Output)
}
data$Sepal.Length <- Class(data$Sepal.Length) %>% as.factor()
data$Sepal.Width <- Class(data$Sepal.Width) %>% as.factor()
data$Petal.Length <- Class(data$Petal.Length) %>% as.factor()
data$Petal.Width <- Class(data$Petal.Width) %>% as.factor()
require(arules)
rule <- apriori(data,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(default = "lhs",
rhs = c("Species=setosa", "Species=versicolor", "Species=virginica")))
install.packages("arules")
require(arules)
rule <- apriori(data,
parameter = list(minlen=4, supp=0.1, conf=0.7),
appearance = list(default = "lhs",
rhs = c("Species=setosa", "Species=versicolor", "Species=virginica")))
inspect(rule)
sort.rule <- sort(rule, by="lift")
inspect(sort.rule)
require(arulesViz)
plot(sort.rule)
plot(sort.rule, method="graph", control=list(type="items"))
plot(sort.rule, method="grouped")
inspect(rule)
sort.rule <- sort(rule, by="lift")
inspect(sort.rule)
require(arulesViz)
plot(sort.rule)
install.packages("arulesViz")
getOption("repos")
